{"version":3,"sources":["component/header.js","component/balance.js","component/incomeexpense.js","redux/slices.js","component/Transaction.js","component/transactionlist.js","component/addtransaction.js","App.js","redux/store.js","index.js"],"names":["Header","React","createElement","className","Balance","pocket","useSelector","state","expensereducer","Fragment","num","p","toFixed","split","reverse","reduce","acc","i","orig","moneyFormatter","income","expense","IncomeExpenses","createSlice","name","initialState","transaction","reducers","updatepocket","action","money","parseInt","payload","addtransaction","push","deletetransaction","amount","filter","id","_pocket$actions","actions","Transaction","_ref","text","dispatch","useDispatch","sign","console","log","Math","abs","onClick","TransactionList","transactionslist","map","trans","AddTransaction","_useState","useState","_useState2","_slicedToArray","setText","_useState3","_useState4","setAmount","onSubmit","e","preventDefault","newTransaction","nanoid","type","value","onChange","target","placeholder","htmlFor","App","mystore","configureStore","reducer","ReactDOM","createRoot","document","getElementById","render","Provider","store"],"mappings":"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","file":"static/js/main.5db3b996.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2 className=\"appname\">\r\n      Expense Master\r\n    </h2>\r\n  )\r\n}","import React from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  let p = num.toFixed(2).split('.');\r\n  return (\r\n    '₹ ' + (p[0].split('')[0]=== '-' ? '-' : '') +\r\n    p[0]\r\n      .split('')\r\n      .reverse()\r\n      .reduce(function (acc, num, i, orig) {\r\n        return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n      }, '') +\r\n    '.' +\r\n    p[1]\r\n  );\r\n}\r\n\r\nexport const Balance = () => {\r\n\r\n  const pocket=useSelector((state)=> state.expensereducer)\r\n\r\n  return (\r\n    <>\r\n    <div className=\"balance\">\r\n    <h4>Your Balance</h4>\r\n    <h1>{moneyFormatter(pocket.income+pocket.expense)}</h1>\r\n    </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n  // let p = num.toFixed(2).split(\".\");\r\n  return (\r\n    \"₹ \" + num\r\n    );\r\n    // p[0]\r\n    //   .split(\"\")\r\n    //   .reverse()\r\n    //   .reduce(function (acc, num, i, orig) {\r\n    //     return num === \"-\" ? acc : num + (i && !(i % 3) ? \",\" : \"\") + acc;\r\n    //   }, \"\") +\r\n    // \".\" +\r\n    // p[1]\r\n  \r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n  const pocket=useSelector((state)=> state.expensereducer);\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{moneyFormatter(pocket.income)}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{moneyFormatter(pocket.expense)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nconst pocket = createSlice({\r\n  name: \"pocket\",\r\n  initialState: {\r\n    income: 0,\r\n    expense: 0,\r\n    transaction: [],\r\n  },\r\n  reducers: {\r\n    updatepocket: (state, action) => {\r\n      const money = parseInt(action.payload);\r\n      if (money > 0) {\r\n        state.income += money;\r\n      } else {\r\n        state.expense += money;\r\n      }\r\n    },\r\n\r\n    addtransaction: (state, action) => {\r\n      state.transaction.push(action.payload);\r\n    },\r\n\r\n    deletetransaction: (state, action) => {\r\n      action.payload.amount<0?state.expense-=action.payload.amount:state.income-=action.payload.amount;\r\n      state.transaction = state.transaction.filter((transaction) => {\r\n        return transaction.id !== action.payload.id;\r\n      });\r\n    },\r\n  },\r\n});\r\nexport const {\r\n  updatepocket,\r\n  addtransaction,\r\n  deletetransaction,\r\n} = pocket.actions;\r\nexport default pocket.reducer;\r\n","import React from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletetransaction} from \"../redux/slices\";\r\n\r\n\r\n// import handledelete from './handledelete';\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n\r\n  console.log(num)\r\n  // let p = num.toFixed(2).split(\".\");\r\n  return (\r\n    \"₹\" + Math.abs(num)\r\n    );\r\n  //   p[0]\r\n  //     .split(\"\")\r\n  //     .reverse()\r\n  //     .reduce(function (acc, num, i, orig) {\r\n  //       return num === \"-\" ? acc : num + (i && !(i % 3) ? \",\" : \"\") + acc;\r\n  //     }, \"\") +\r\n  //   \".\" +\r\n  //   p[1] \r\n}\r\n\r\nexport const Transaction = ( {id,text,amount} ) => {\r\n\r\n  const dispatch=useDispatch()\r\n\r\n  const handledelete=()=>{\r\n\r\n    dispatch(deletetransaction({id,amount}))\r\n    // dispatch(updatepocket(amount*-1))\r\n\r\n}\r\n\r\n\r\n  const sign = amount < 0 ? '-' : '+';\r\n\r\n  return (\r\n    <li className={amount < 0 ? 'minus' : 'plus'}>\r\n      {text} <span>{sign}{moneyFormatter(amount)}</span><button onClick={()=>{handledelete()}} className=\"delete-btn\">x</button>\r\n    </li>\r\n  )\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const transactionslist = useSelector((state) => state.expensereducer);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      {console.log(transactionslist)}\r\n      <ul className=\"list\">\r\n        {transactionslist.transaction.map((trans) => {\r\n          return <Transaction {...trans} />;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addtransaction } from \"../redux/slices\";\r\nimport { updatepocket } from \"../redux/slices\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: nanoid(),\r\n      text: text,\r\n      amount: amount,\r\n    };\r\n\r\n    dispatch(addtransaction(newTransaction));\r\n    dispatch(updatepocket(newTransaction.amount));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"addtransaction\">\r\n        <h3>Add new transaction</h3>\r\n        <form onSubmit={onsubmit}>\r\n          <div className=\"form-control\">\r\n            <input\r\n              type=\"text\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              placeholder=\"Enter transaction details...\"\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"amount\">\r\n              (negative - expense, positive - income)\r\n            </label>\r\n            <input\r\n              type=\"number\"\r\n              value={amount}\r\n              onChange={(e) => setAmount(e.target.value)}\r\n              placeholder=\"Enter amount...\"\r\n            />\r\n          </div>\r\n          <button className=\"btn\">Add transaction</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\nimport { Header } from './component/header';\nimport { Balance } from './component/balance';\nimport { IncomeExpenses } from './component/incomeexpense';\nimport { TransactionList } from './component/transactionlist';\nimport { AddTransaction } from './component/addtransaction';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <AddTransaction />\n        <TransactionList/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport pocket from \"./slices\"\r\nconst mystore=configureStore({\r\n    reducer : { \r\n        expensereducer:pocket\r\n    }\r\n}\r\n)\r\nexport default mystore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport mystore from './redux/store';\nimport './App.css';\nconst root=ReactDOM.createRoot(document.getElementById('root'))\nroot.render(\n    <>\n    <Provider store={mystore}>\n        <App/>\n    </Provider>\n    </>\n)"],"sourceRoot":""}